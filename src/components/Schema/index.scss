@import "../../common";

@mixin align-and-wrap-children {
  display: flex;
  flex-flow: row wrap;
  align-items: center;

  > * {
    margin-right: 0.4em;

    &:last-of-type {
      margin-right: 0;
    }
  }
}

.document {
  display: flex;
  flex-flow: row wrap;
}

.schema-definition {
  width: 100%;
}

.type-definition {
  @include panel;

  margin: 2em 1.5em;
  padding: 1.2em 1.4em;

  $hue-spread: 5;
  $base: adjust-color($primary, $lightness: -45%, $saturation: -75%);
  $from: adjust-color($base, $hue: $hue-spread);
  $to: adjust-color($base, $hue: -$hue-spread);
  @include gradient($from, $to);

  .type-definition-header {
    width: 100%;

    .type-definition-name {
      font-size: 1.5em;
      font-weight: bold;
      color: $secondary;

      * {
        display: inline-block;
      }

      .syntax {
        margin-right: 0.3em;
        font-weight: 300;
      }
    }

    .type-definition-description {
      font-size: 1.2em;
    }
  }
}

.object-type-definition,
.interface-type-definition,
.enum-type-definition,
.input-object-type-definition {
  .type-definition-body {
    margin: 0.5em 0 0.2em 0;
  }
}

.field-definition,
.input-value-definition,
.enum-value-definition {
  @include align-and-wrap-children;

  * {
    display: inline-block;
  }

  &:before {
    content: "";

    margin: 0.5em 0;
    height: 0.14em;
    width: 100%;

    opacity: 0.1;
    background: black;
  }

  .field-definition-name,
  .input-value-definition-name,
  .enum-value-definition-name {
    font-size: 1.4em;
  }

  .enum-value-definition-name {
    font-weight: bold;
  }

  .field-definition-type-ref,
  .input-value-definition-type-ref {
    color: $secondary;
  }

  .description {
    display: block;
    width: 100%;
  }
}

.union-type-definition {
  .type-definition {
    @include align-and-wrap-children;

    .type-definition-body {
      @include align-and-wrap-children;

      > * {
        margin: 0.1em;
        font-weight: bold;
        color: $secondary;
      }
    }
  }
}

.named-type-ref {
  * {
    text-decoration: none;
    color: $secondary;
  }
  .name {
    margin-top: -0.1em;
    font-weight: bold;
  }
}

$type-ref-padding: 0.3em;

$secondary-dark: adjust-color($secondary, $lightness: -55%, $saturation: -55%);

.named-type-ref,
.list-type-ref {
  @include panel;
  @include gradient-default($secondary-dark);
  @include inner-highlight(transparentize($secondary, 0.6));

  padding: $type-ref-padding 0.6em;

  .name {
    color: adjust-hue($secondary, -10);
  }
}

.list-type-ref {
  padding-right: $type-ref-padding;

  & > .syntax {
    margin-right: 0.5em;
    font-weight: 400;
    font-style: italic;
  }
}

.type-definition-body,
.non-null-type-ref {
  > .named-type-ref,
  > .list-type-ref {
    @include gradient-default($secondary);
    @include inner-highlight(transparentize(lighten($secondary, 30%), 0.8));

    .syntax {
      color: darken($secondary, 40%);
    }
  }
}

.type-definition-body,
.non-null-type-ref {
  padding: 0;
  > .named-type-ref * {
    color: darken($secondary, 40%);
  }
}

.description {
  font-weight: 200;
  opacity: 0.4;
}
